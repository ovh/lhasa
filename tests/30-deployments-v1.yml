name: Deployments Endpoint TestSuite
vars:
  baseroute: '{{.APP_HOST}}/api/v1'
  depsroute: '{{.baseroute}}/deployments'
  envsroute: '{{.baseroute}}/environments'
  appsroute: '{{.baseroute}}/applications'
  graphroute: '{{.baseroute}}/graphs'
testcases:
- name: Reset the Database
  steps:
    - type: http
      method: DELETE
      url: '{{.depsroute}}'
      headers:
      assertions:
      - result.statuscode ShouldEqual 204
    - type: http
      method: DELETE
      url: '{{.appsroute}}'
      headers:
      assertions:
      - result.statuscode ShouldEqual 204
    - type: http
      method: DELETE
      url: '{{.envsroute}}'
      headers:
      assertions:
      - result.statuscode ShouldEqual 204

- name: DeploymentLifecycle
  steps:
    - type: http
      method: PUT
      url: "{{.appsroute}}/urba/appcatalog/versions/1"
      body: |
        {
          "domain": "urba",
          "name": "appcatalog",
          "version": "1",
          "manifest": {
            "description": "Great application to manage and plan your information system."
          }
        }
      headers:
      assertions:
      - result.statuscode ShouldEqual 201
    - type: http
      method: PUT
      url: "{{.appsroute}}/urba/appcatalog/versions/2"
      body: |
        {
          "domain": "urba",
          "name": "appcatalog",
          "version": "2",
          "manifest": {
            "description": "Great application to manage and plan your information system."
          }
        }
      headers:
      assertions:
      - result.statuscode ShouldEqual 201
    - type: http
      method: PUT
      url: "{{.envsroute}}/depenv"
      headers:
      body: '{"name": "Deployment test env", "properties": {}}'
      assertions:
      - result.statuscode ShouldEqual 201
    - type: http
      method: GET
      url: "{{.appsroute}}/urba/appcatalog/versions/1/deployments"
      headers:
      assertions:
      - result.body ShouldEqual []
    - type: http
      method: POST
      url: "{{.appsroute}}/urba/appcatalog/versions/1/deploy/depenv"
      headers:
      body: '{"properties": {"git.commit": "41849c78a31cc2d65fa03d7ddd3b330e3e9ed2ec"}}'
      assertions:
      - result.statuscode ShouldEqual 201
    - type: http
      method: GET
      url: "{{.appsroute}}/urba/appcatalog/versions/1/deployments"
      headers:
      assertions:
      - result.bodyjson.bodyjson0 ShouldNotBeEmpty
      - result.statuscode ShouldEqual 200
    - type: http
      method: GET
      url: "{{.appsroute}}/urba/appcatalog/deployments"
      headers:
      assertions:
      - result.bodyjson.bodyjson0 ShouldNotBeEmpty
      - result.statuscode ShouldEqual 200
    - type: http
      method: GET
      url: "{{.appsroute}}/urba/appcatalog/versions/1/deployments/depenv"
      headers:
      assertions:
      - result.bodyjson ShouldNotBeEmpty
      - result.statuscode ShouldEqual 200
    - type: http
      method: POST
      url: "{{.appsroute}}/urba/appcatalog/versions/2/deploy/depenv"
      headers:
      body: '{"properties": {"git.commit": "41849c78a31cc2d65fa03d7ddd3b330e3e9ed2ec"}}'
      assertions:
      - result.statuscode ShouldEqual 201
    - type: http
      method: GET
      url: "{{.appsroute}}/urba/appcatalog/versions/1/deployments/depenv"
      headers:
      assertions:
      - result.statuscode ShouldEqual 200
      - result.bodyjson.undeployedat ShouldNotBeEmpty
    - type: http
      method: GET
      url: "{{.appsroute}}/urba/appcatalog/versions/2/deployments/depenv"
      headers:
      assertions:
      - result.statuscode ShouldEqual 200
      - result.bodyjson ShouldNotContainKey undeployedAt
    - type: http
      method: GET
      url: "{{.appsroute}}/urba/appcatalog/versions/1/deployments"
      headers:
      assertions:
      - result.body ShouldEqual []
      - result.statuscode ShouldEqual 200
    - type: http
      method: GET
      url: "{{.appsroute}}/urba/appcatalog/versions/2/deployments"
      headers:
      assertions:
      - result.bodyjson.bodyjson0 ShouldNotBeEmpty
      - result.statuscode ShouldEqual 200
- name: DeploymentDepend
  steps:
    - type: http
      method: PUT
      url: "{{.appsroute}}/domain1/app1/versions/6"
      body: |
        {
          "domain": "domain1",
          "name": "app1",
          "version": "6",
          "manifest": {
            "description": "Great application to manage and plan your information system."
          }
        }
      headers:
      assertions:
      - result.statuscode ShouldEqual 201
    - type: http
      method: PUT
      url: "{{.appsroute}}/domain2/app2/versions/7"
      body: |
        {
          "domain": "domain2",
          "name": "app2",
          "version": "7",
          "manifest": {
            "description": "Another great application to manage and plan your information system."
          }
        }
      headers:
      assertions:
      - result.statuscode ShouldEqual 201
    - type: http
      method: PUT
      url: "{{.envsroute}}/another"
      headers:
      body: '{"name": "Deployment test env", "properties": {}}'
      assertions:
      - result.statuscode ShouldEqual 201
    - type: http
      method: GET
      url: "{{.appsroute}}/domain1/app1/versions/6/deployments"
      headers:
      assertions:
      - result.body ShouldEqual []
    - type: http
      method: POST
      url: "{{.appsroute}}/domain1/app1/versions/6/deploy/another"
      headers:
      body: '{"properties": {"arsenal_id": "app1-token","application_version": "v1.0"}}'
      assertions:
      - result.statuscode ShouldEqual 201
    - type: http
      method: GET
      url: "{{.appsroute}}/domain1/app1/versions/6/deployments"
      headers:
      assertions:
      - result.bodyjson.bodyjson0 ShouldNotBeEmpty
      - result.statuscode ShouldEqual 200
    - type: http
      method: GET
      url: "{{.appsroute}}/domain1/app1/versions/6/deployments/another"
      headers:
      assertions:
      - result.bodyjson ShouldNotBeEmpty
      - result.statuscode ShouldEqual 200
    - type: http
      method: POST
      url: "{{.appsroute}}/domain2/app2/versions/7/deploy/another"
      headers:
      body: '{"properties": {"arsenal_id": "app2-token","application_version": "v2.0"}}'
      assertions:
      - result.statuscode ShouldEqual 201
    - type: http
      method: GET
      url: "{{.appsroute}}/domain2/app2/versions/7/deployments/another"
      headers:
      assertions:
      - result.statuscode ShouldEqual 200
    - type: http
      method: GET
      url: "{{.appsroute}}/domain2/app2/versions/7/deployments/another"
      headers:
      assertions:
      - result.statuscode ShouldEqual 200
    - type: http
      method: GET
      url: "{{.appsroute}}/domain2/app2/versions/7/deployments"
      headers:
      assertions:
      - result.statuscode ShouldEqual 200
    - type: http
      method: GET
      url: "{{.appsroute}}/domain2/app2/versions/7/deployments"
      headers:
      assertions:
      - result.statuscode ShouldEqual 200
    - type: http
      method: GET
      url: "{{.depsroute}}"
      headers:
      assertions:
      - result.bodyjson.content.content0 ShouldNotBeEmpty
      - result.statuscode ShouldEqual 206
    - type: http
      method: POST
      url: "{{.depsroute}}/{{.DeploymentDepend.result.bodyjson.content.content0.id}}/add_link/{{.DeploymentDepend.result.bodyjson.content.content1.id}}"
      body: '{"type": "sync:call"}'
      headers:
      assertions:
      - result.bodyjson.id ShouldNotBeEmpty
      - result.statuscode ShouldEqual 200
    - type: http
      method: GET
      url: "{{.graphroute}}/"
      headers:
      assertions:
      - result.bodyjson ShouldNotBeEmpty
      - result.statuscode ShouldEqual 200


